#N canvas 649 52 805 391 10;
#X obj 270 105 polytouchin 1;
#X obj 270 149 pack 0 0;
#X obj 270 127 t b f;
#X floatatom 240 326 5 0 0 0 - - -;
#X text 429 269 Poly Aftertouch Values per MIDI Note;
#X text 374 103 Arg.: MIDI Channel. Outlets: AT value \, MIDI Note
Nr];
#X obj 270 251 expr if($i1==1 \, 0 \, $i1) \; if($i2==1 \, 0 \, $i2)
\; if($i3==1 \, 0 \, $i3);
#X floatatom 310 326 5 0 0 0 - - -;
#X floatatom 381 325 5 0 0 0 - - -;
#X obj 320 222 t b f;
#X obj 370 222 t b f;
#X text 419 199 Avoid spam;
#X text 428 254 Outputs 0 to 127 instead of 1 to 127;
#X obj 270 297 ctlout;
#X obj 340 297 ctlout;
#X obj 411 297 ctlout;
#X text 460 297 Define MIDI CC out here;
#X obj 270 170 route 44 45 46;
#X obj 41 170 route 47;
#X obj 41 252 expr if($i1==1 \, 0 \, $i1);
#X obj 41 191 change;
#X obj 270 201 change;
#X obj 320 201 change;
#X obj 370 201 change;
#X obj 51 293 ctlout;
#X floatatom 41 323 5 0 0 0 - - -;
#X obj 41 105 polytouchin 1;
#X obj 41 149 pack 0 0;
#X obj 41 127 t b f;
#X text 40 86 ONE PARAMETER;
#X text 272 86 MULTIPLE PARAMETERS;
#X text 654 23 Tobias Hartmann 2019;
#X text 41 17 Polyin to ctlout;
#X text 42 37 This is a simple method to read out polyphonic aftertouch
values (1-127) and send them out as 0 to 127 MIDI CC values.;
#X text 371 167 Set MIDI Notes (corresponding to the controllers) to
be read out.;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 17 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 6 0 13 0;
#X connect 6 0 3 0;
#X connect 6 1 14 0;
#X connect 6 1 7 0;
#X connect 6 2 15 0;
#X connect 6 2 8 0;
#X connect 9 0 6 0;
#X connect 9 1 6 1;
#X connect 10 0 6 0;
#X connect 10 1 6 2;
#X connect 17 0 21 0;
#X connect 17 1 22 0;
#X connect 17 2 23 0;
#X connect 18 0 20 0;
#X connect 19 0 24 0;
#X connect 19 0 25 0;
#X connect 20 0 19 0;
#X connect 21 0 6 0;
#X connect 22 0 9 0;
#X connect 23 0 10 0;
#X connect 26 0 28 0;
#X connect 26 1 27 0;
#X connect 27 0 18 0;
#X connect 28 0 27 0;
#X connect 28 1 27 1;
